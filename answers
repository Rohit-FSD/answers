Programs
-----------------------------------------
ANS 1:
code:
#include <stdio.h>
 
int main()
{
    int counter=0,grade,total=0;
    float average;
    
 
    printf("Enter grade -5 to end :");
    scanf("%d",&grade);
    while(grade!=-5){
        total=total+grade;
        counter=counter+1;
        printf("Enter grade -5 to end :");
        scanf("%d",&grade);
    }
    if(counter!=0){
        average=(float)total/counter;
        printf("Class average is %.2f\n",average);
    }
    else{
        printf("No grades entered\n");
    }
 
    return 0;
}
-----------------------------
ANS 12:
code:
#include <stdio.h>
 
int main()
{
    int a,b,sum;
    float avg,product;
 
    printf("Enter first number :");
    scanf("%d",&a);
    printf("Enter second number :");
    scanf("%d",&b);
 
    sum=a+b;
    avg= (float)(a+b)/2;
    product=a*b;
 
    printf("\nSum of %d and %d is = %d",a,b,sum);
    printf("\nAverage of %d and %d is = %f",a,b,avg);
    printf("\nProduct of %d and %d is = %f",a,b,product);
 
    return 0;
}
----------------------------------------
ANS 11:
code:
---------
// C program to check if a 
// number is prime 

#include <stdio.h> 
#include<math.h> 
int main() 
{ 
	int n, i, flag = 1; 
	printf("Enter a number: \n"); 
	scanf("%d", &n);
	for (i = 2; i <= sqrt(n); i++) { 
		if (n % i == 0) { 
			flag = 0; 
			break; 
		} 
	} 
	if(n<=1) 
	flag=0; 
	else if(n==2) 
	flag=1; 

	if (flag == 1) { 
		printf("%d is a prime number", n); 
	} 
	else { 
		printf("%d is not a prime number", n); 
	} 

	return 0; 
} 
---------------------------------

ANS 10:
----------
code:
#include <stdio.h>

int main()
{
    int i, n=10;
    printf("Printing all even numbers till 10: ");
    printf("Even numbers from 1 to 10 are: \n");

    for(i=1; i<=n; i++)
    {
        if(i%2 == 0)
        {
            printf("%d\n", i);
        }
    }

    return 0;
}
---------------------------------------
ANS 9:
code:
-----------

#include <stdio.h> 

unsigned int factorial(unsigned int n) 
{ 
    if (n == 0) 
        return 1; 
    return n * factorial(n - 1); 
} 
  
int main() 
{ 
    int num;
    printf("\nEnter the number :");
    scanf("%d",&num);
    printf("Factorial of %d is %d", num, factorial(num)); 
    return 0; 
} 
------------------------
ANS8:
----------------
code:
#include <stdio.h> 
//greatest of 3 integers
int main() 
{ 
    int A, B, C, largest; 
  
    printf("Enter three numbers: "); 
    scanf("%d %d %d", &A, &B, &C); 
  
    largest = A > B ? (A > C ? A : C) : (B > C ? B : C); 
  
    printf("%d is the largest number.", largest); 
  
    return 0; 
} 

//greatest of 4 integers
#include<stdio.h> 
#include<stdlib.h> 
int main() 
{  
 int a,b,c,d,largest; 

 printf("Enter the 4 numbers :\n "); 
 scanf("%d %d %d %d",&a,&b,&c,&d); 

 largest= (a>b)?(a>c)?(a>d)?a:d:(c>d)?c:d:(b>c)?(b>d)?b:d:(c>d)?c:d; 
 printf("The largest number is %d",largest); 
 return 0; 
} 
---------------------------
ANS 7:-----
code:
#include<stdio.h>
void main()
{
    int r=0,n,sum=0,d;
    printf("Enter the number which you want to reverse and find the summ of digits:");
    scanf("%d",&n);
    while(n>0)
    {
      d=n%10;
      sum=sum+d;
      r=(r*10)+d;
      n=n/10;
    }
    printf("\n sum of digits= %d",sum);
    printf("\n Reverse=%d",r);
    printf("\n");

}
-----------------------------------
ANS 6:--
code:
#include<stdio.h>
int fib(int n)
{
   if (n <= 1)
      return n;
   return fib(n-1) + fib(n-2);
}
 
int main ()
{
  int n;
  printf("\nEnter the number :");
  scanf("%d",&n);
  printf("\n%d", fib(n));
  return 0;
}
-----------------------------------------------
ANS5:
------------
code:
#include <stdio.h>
// in the range [X, Y] 
int countOdd(int L, int R){ 

	int N = (R - L) / 2; 

	// if either R or L is odd 
	if (R % 2 != 0 || L % 2 != 0) 
		N += 1; 

	return N; 
} 
int main() 
{ 
	int X,Y; 
	printf("\nEnter the range : X:");
    scanf("%d",&X);
	printf("\nEnter the range : Y:");
	scanf("%d",&Y);
	int odds = countOdd(X, Y); 
	int evens = (Y - X + 1) - odds; 
	
	printf("\nCount of odd numbers is %d",odds);
	printf("\nCount of even numbers is %d",evens);
	return 0; 
} 
----------------------------

ANS3:
----------------
code:
/* C program to find roots of a quadratic equation */
#include <math.h>
#include <stdio.h>
#include <stdlib.h>

// Prints roots of quadratic equation ax*2 + bx + x
void findRoots(int a, int b, int c)
{
	// If a is 0, then equation is not quadratic, but
	// linear
	if (a == 0) {
		printf("Invalid");
		return;
	}

	int d = b * b - 4 * a * c;
	double sqrt_val = sqrt(abs(d));

	if (d > 0) {
		printf("Roots are real and different \n");
		printf("%f\n%f", (double)(-b + sqrt_val) / (2 * a),
			(double)(-b - sqrt_val) / (2 * a));
	}
	else if (d == 0) {
		printf("Roots are real and same \n");
		printf("%f", -(double)b / (2 * a));
	}
	else // d < 0
	{
		printf("Roots are complex \n");
		printf("%f + i%f\n%f - i%f", -(double)b / (2 * a),
			sqrt_val, -(double)b / (2 * a), sqrt_val);
	}
}

int main()
{
    int a,b,c;
	printf("\nEnter a, b, c to enter inside eq.:");
	scanf("%d%d%d",&a,&b,&c);
	findRoots(a, b, c);
	return 0;
}

-----------------------------------------
Answer 2: Swap
-----------------
code: 
//1st technique (using temporary variable)

#include <stdio.h>
int main() 
{ 
    int x, y; 
    int temp=0;
    printf("Enter Value of first number "); 
    scanf("%d", &x); 
    printf("\nEnter Value of second number "); 
    scanf("%d", &y); 
    temp=x;
    x=y;
    y=temp;
    printf("\nAfter Swapping: firstNumber = %d, secondNumber = %d", x, y); 
    return 0; 
} 

//2nd technique(using airthmetic operation)

#include <stdio.h>
int main() 
{ 
    int x, y; 
    int temp=0;
    printf("Enter Value of first number "); 
    scanf("%d", &x); 
    printf("\nEnter Value of second number "); 
    scanf("%d", &y); 
    x = x + y;
    y = x - y;
    x = x - y;
    printf("\nAfter Swapping: firstNumber = %d, secondNumber = %d", x, y); 
    return 0; 
} 

-------------------------
ANS 4:
-------------------
code:
#include<stdio.h>    
// function to convert decimal to binary 
void decToBinary(int n) 
{ 
    // array to store binary number 
    int binaryNum[32]; 
  
    // counter for binary array 
    int i = 0; 
    while (n > 0) { 
  
        // storing remainder in binary array 
        binaryNum[i] = n % 2; 
        n = n / 2; 
        i++; 
    } 
  
    // printing binary array in reverse order 
    for (int j = i - 1; j >= 0; j--) 
        printf("%d",binaryNum[j]); 
} 
  
int main() 
{ 
    int n;
    printf("\n Enter Number :");
    scanf("%d",&n);
    decToBinary(n); 
    return 0; 
} 
